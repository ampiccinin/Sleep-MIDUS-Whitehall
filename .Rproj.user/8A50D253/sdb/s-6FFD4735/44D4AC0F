{
    "contents" : "# remove all elements for a clean start\nrm(list=ls(all=TRUE))\n\n\n# load the data from a previously saved RDS\nds00 <- readRDS(file=\"./Data/Derived/ds00.rds\")\nds0 <- readRDS(file=\"./Data/Derived/ds0.rds\")\n\n#ds0 with PSQ sleep variables dropped\nMIDUS_sleepPSQ <- names(ds0) %in% c(\n  'B4S4', 'B4S5', 'B4S7', 'B4S11A', 'B4S11B', 'B4S11C', 'B4S11D',    \n  'B4S11E', 'B4S11F', 'B4S11G', 'B4S11H', 'B4S11I', 'B4S11J')\nds0daily <- ds0[!MIDUS_sleepPSQ] \n\n# create new dataset without missing data \n# ds00_nomissing <- na.omit(ds00)\n# ds0_nomissing <- na.omit(ds0)\n# ds0daily_nomissing <- na.omit(ds0daily)\n\n# rename for brevity of reference\nds00nm <- na.omit(ds00)\nds0m <- na.omit(ds0)\nds0dnm <- na.omit(ds0daily)\n\n### Before creating factors, MAKE SURE TO RENAME THE VARIABLES WITH DESCRIPTIVE NAMES\n\n# ds00nm$GENDER[ds00nm$B1PGENDER.x==\"(1) MALE\"] <- \"1\"\n# ds00nm$GENDER[ds00nm$B1PGENDER.x==\"(2) FEMALE\"] <- \"2\"\n# ds00nm$GENDER = as.numeric(ds00nm$GENDER)\n\n\n\n# create levels (numerical values) and labels (character strings)\nfemaleLevels<- c(0, 1) \nfemaleLabels<-c(\"(1) MALE\", \n                \"(2) FEMALE\")\nvarlist<- c(\"B1PGENDER.x\") # \n# cycle through variables to which these labels should be applied, in this case only one\nfor(i in varlist){\n  ds00nm[ , paste0(i,\"F\") ]<-ordered(ds00nm[,i], # create a new column  which name is = old name + F (for FACTOR)\n             levels = femaleLevels,\n             labels = femaleLabels)\n}\n# Examine the newly created variable\nstr(ds00nm$B1PGENDER.xF)\nlevels(ds00nm$B1PGENDER.xF)\n\n#checks to see if it is numeric:\nis.numeric(ds00nm$GENDER)\n\n#Convert Sleep Quality to numeric in ds00nm\n#Fairly, Good, Fairly Bad, Very Bad is condensed into \"Bad\" containing both groups\nds00nm$SQUAL[ds00nm$B4S5==\"(1) 1=VERY GOOD\"] <- \"1\"\nds00nm$SQUAL[ds00nm$B4S5==\"(2) 2=FAIRLY GOOD\"] <- \"2\"\nds00nm$SQUAL[ds00nm$B4S5==\"(3) 3=FAIRLY BAD\"] <- \"2\"\nds00nm$SQUAL[ds00nm$B4S5==\"(4) 4=VERY BAD\"] <- \"2\"\nds00nm$SQUAL = as.numeric(ds00nm$SQUAL)\n#checks to see if it is numeric:\nis.numeric(ds00nm$SQUAL)\n\n\n# create levels (numerical values) and labels (character strings) for this type of response\noften4Levels<- c(1,2,3,4) \noften4Labels<-c(\"(1) 1=NOT DURING PAST MONTH\",\n                \"(2) 2=LESS THAN 1 X WEEK\",\n                \"(3) 3=1-2 X WEEK\",\n                \"(4) 4=3+ WEEK\")\nvarlist<- c(\"B4S11A\", \"B4S11B\",  \"B4S11D\", \"B4S11E\", \"B4S11F\" , \"B4S11G\",  \"B4S11H\",  \"B4S11I\", \"B4S11J\" ) # these should be replaced by descriptive names. rename prior to converting.\n# cycle through variables to which these labels should be applied, in this case only one\nfor(i in varlist){\n  ds00nm[ , paste0(i,\"F\") ]<-ordered(ds00nm[,i], # create a new column  which name is = old name + F (for FACTOR)\n                                     levels = often4Levels,\n                                     labels = often4Labels)\n}\n\n# \n# \n# #Convert Sleep Disturbance to numeric in ds00nm\n# ds00nm$SDISA[ds00nm$B4S11A==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISA[ds00nm$B4S11A==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISA[ds00nm$B4S11A==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISA[ds00nm$B4S11A==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISA = as.numeric(ds00nm$SDISA)\n# \n# ##### \n# \n# ds00nm$SDISB[ds00nm$B4S11B==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISB[ds00nm$B4S11B==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISB[ds00nm$B4S11B==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISB[ds00nm$B4S11B==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISB = as.numeric(ds00nm$SDISB)\n#  \n# ##### \n# \n# ds00nm$SDISC[ds00nm$B4S11C==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISC[ds00nm$B4S11C==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISC[ds00nm$B4S11C==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISC[ds00nm$B4S11C==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISC = as.numeric(ds00nm$SDISC)\n# \n# \n# #####\n# \n# ds00nm$SDISD[ds00nm$B4S11D==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISD[ds00nm$B4S11D==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISD[ds00nm$B4S11D==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISD[ds00nm$B4S11D==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISD = as.numeric(ds00nm$SDISD)\n# \n# ##### \n# \n# ds00nm$SDISE[ds00nm$B4S11E==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISE[ds00nm$B4S11E==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISE[ds00nm$B4S11E==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISE[ds00nm$B4S11E==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISE = as.numeric(ds00nm$SDISE)\n# \n# ##### \n# \n# ds00nm$SDISF[ds00nm$B4S11F==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISF[ds00nm$B4S11F==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISF[ds00nm$B4S11F==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISF[ds00nm$B4S11F==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISF = as.numeric(ds00nm$SDISF)\n#\" \"\n# #####  \n#  \n# ds00nm$SDISG[ds00nm$B4S11G==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISG[ds00nm$B4S11G==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISG[ds00nm$B4S11G==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISG[ds00nm$B4S11G==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISG = as.numeric(ds00nm$SDISG)\n# \n# ##### \n# \n# ds00nm$SDISH[ds00nm$B4S11H==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISH[ds00nm$B4S11H==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISH[ds00nm$B4S11H==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISH[ds00nm$B4S11H==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISH = as.numeric(ds00nm$SDISH)\n# \n# #####\n# \n# ds00nm$SDISI[ds00nm$B4S11I==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISI[ds00nm$B4S11I==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISI[ds00nm$B4S11I==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISI[ds00nm$B4S11I==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISI = as.numeric(ds00nm$SDISI)\n# \n# #####\n# \n# ds00nm$SDISJ[ds00nm$B4S11J==\"(1) 1=NOT DURING PAST MONTH\"] <- \"1\"\n# ds00nm$SDISJ[ds00nm$B4S11J==\"(2) 2=LESS THAN 1 X WEEK\"] <- \"2\"\n# ds00nm$SDISJ[ds00nm$B4S11J==\"(3) 3=1-2 X WEEK\"] <- \"3\"\n# ds00nm$SDISJ[ds00nm$B4S11J==\"(4) 4=3+ WEEK\"] <- \"4\"\n# ds00nm$SDISJ = as.numeric(ds00nm$SDISJ)\n\n#checks to see if it is numeric:\n#switch SDIS_ to letter of choice\nis.numeric(ds00nm$SDISA)\n\n\n#Syntax to SUM Sleep Disturbance scores\nds00nm$SDis <- ds00nm$SDISA + ds00nm$SDISB + ds00nm$SDISC + ds00nm$SDISD + ds00nm$SDISE + ds00nm$SDISF + ds00nm$SDISG + ds00nm$SDISH + ds00nm$SDISI + ds00nm$SDISJ\n\n\n# I don't know the names of your actual variables, so I've just made some up below\n# I am hoping you can edit these examples with your real variable names and get them to run\n\n# Create squared Sleep Duration term to use in regression for curvilinear (quadratic) relationship with cognition\n#  Get the mean SleepDuration, then subtract it from each person's score, then multiply the centered variables together\n\n\n#drop outlier EF\nds_PSQ <- ds00nm[ which(ds00nm$B3TEFZ3 > -4.00), ]\n\n\nds_PSQ$DurationC <- ds_PSQ$B4S4 - 6.888\nds_PSQ$Duration2 <- ds_PSQ$DurationC * ds_PSQ$DurationC\n\n\n########## DESCRIPTIVE STATISTICS\n\n##Run descriptive stats on ds00 (dataset with daily sleep variables dropped)\n\n#with psych pkg\nlibrary(psych)\ndescribe(ds_PSQ)\n\nlibrary(psych)\ndescribe(ds0daily_nomissing)\n\n\n# For Correlations, see: http://www.statmethods.net/stats/correlations.html\n\n\n# GRAPHICAL look at data\n\n# Basic Scatterplot Matrix - so you can scan them all quickly\npairs(~B3TEMZ3+B3TEFZ3+SDis+B4S4+DurationC+Duration2,data=ds_PSQ, \n      main=\"Scatterplot Matrix\")\n\n# what is the id of the person with a potential outlier?\nds <- ds_PSQ[order(ds_PSQ$B4S4,decreasing=T),]\nhead(ds)\n\n# If you want to highlight just one Simple Scatterplot\nattach(ds00nm)\nplot(B3TEMZ3, SDis, main=\"Scatterplot of Cognition by Sleep Disturbance\", \n     xlab=\"Sleep Quality\", ylab=\"Cognitive Variable \", pch=19)\n\n# you can add  fit lines to your scatterplot with:\nabline(lm(B3TEMZ3~SDis), col=\"red\") # regression line (y~x) \n\n# If you want to make visually stunning graphs for your poster\n# you can try playing around with ggplot2: see  http://www.cookbook-r.com/Graphs/ \n# but lets get the basics done first.\n\n# Multiple Linear Regression for Memory \nfit <- lm(B3TEMZ3 ~ SDis + DurationC + Duration2, data=ds)\nsummary(fit) # show results\n# Other useful functions \ncoefficients(fit) # model coefficients\nconfint(fit, level=0.95) # CIs for model parameters \nfitted(fit) # predicted values\nresiduals(fit) # residuals\nanova(fit) # anova table \nvcov(fit) # covariance matrix for model parameters \ninfluence(fit) # regression diagnostics\n# diagnostic plots \nlayout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page \nplot(fit)\n\n\n# Multiple Linear Regression for EF \nfit <- lm(B3TEFZ3 ~ SDis + DurationC + Duration2, data=ds)\nsummary(fit) # show results\n# Other useful functions \ncoefficients(fit) # model coefficients\nconfint(fit, level=0.95) # CIs for model parameters \nfitted(fit) # predicted values\nresiduals(fit) # residuals\nanova(fit) # anova table \nvcov(fit) # covariance matrix for model parameters \ninfluence(fit) # regression diagnostics\n# diagnostic plots \nlayout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page \nplot(fit)\n\n\n##LINEAR REGRESSION MODELS\n\nB4S5 <- c(\"B4S5\")\nSqual <- as.numeric(levels(B4S5))[B4S5]\n\n# Pittsburgh Sleep Quality Inventory:\n# Hypothesis 1: Individuals who rate poorer sleep quality have poorer cognition relative to individuals who rate higher sleep quality.\n\n#memory\nfit_h1_1 <- lm(B3TEMZ3 ~ SQUAL, data=ds_PSQ)\nsummary(fit_h1_1) # show results\n\n#EF\nfit_h1_2 <- lm(B3TEFZ3 ~ SQUAL, data=ds_PSQ)\nsummary(fit_h1_2) # show results\n\n# Hypothesis 2: There is an association between sleep duration and cognition in that sleep duration predicts cognitive scores.\n\n#memory\nfit_h2_1 <- lm(B3TEMZ3 ~ DurationC + Duration2, data=ds_PSQ)\nsummary(fit_h2_1) # show results\n\n#EF\nfit_h2_2 <- lm(B3TEFZ3 ~ Sdur1 + Sdur, data=ds_PSQ)\nsummary(fit_h2_2) # show results\n\n# Hypothesis 3: There is an association between sleep disturbance and cognition in that sleep disturbance predicts cognitive scores.\n\n#memory\nfit_h3_1 <- lm(B3TEMZ3 ~ SDis, data=ds_PSQ)\nsummary(fit_h3_1) # show results\n\n#EF\nfit_h3_2 <- lm(B3TEFZ3 ~ SDis, data=ds_PSQ)\nsummary(fit_h3_2) # show results\n\n\n#Hypothesis 4: Sleep duration and sleep disturbance together are better predictors of cognitive score compared to each predictor separately.\n\n#memory\nfit_h4_1 <- lm(B3TEMZ3 ~ SDis + Sdur1 + Sdur, data=ds_PSQ)\nsummary(fit_h4_1) # show results\n\n#EF\nfit_h4_2 <- lm(B3TEFZ3 ~ SDis + Sdur1 + Sdur, data=ds_PSQ)\nsummary(fit_h4_2) # show results\n\n#                       (Regress Cognition on sleep disturbance, sleep duration & sleepduration squared)\n",
    "created" : 1425694187545.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "779690989",
    "id" : "44D4AC0F",
    "lastKnownWriteTime" : 1425697376,
    "path" : "~/GitHub/Sleep-MIDUS-Whitehall/Scripts/Data/dsL_andrey_tweaking.R",
    "project_path" : "Scripts/Data/dsL_andrey_tweaking.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}